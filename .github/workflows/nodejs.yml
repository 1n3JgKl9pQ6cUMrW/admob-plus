name: Node.js

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Config git
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            .eslintcache
            yarn.lock
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}-${{ secrets.CACHE_VERSION }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn --version
          yarn set version from sources
          yarn --version
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Install dependencies
        run: |
          yarn

      - name: Build
        run: |
          pushd packages/cli
          yarn prepack
          popd

      - name: Test
        run: |
          yarn lint
          yarn test
        shell: bash

  test-android:
    name: Android on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [15.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            yarn.lock
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: |
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/tools" >> $GITHUB_PATH
          yarn
          pushd examples/basic
          npx cordova platform rm ios
          yarn
          popd

      - name: Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          script: yarn test-android

  test-ios:
    name: iOS on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ['15']
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            yarn.lock
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Install dependencies
        run: |
          yarn
          pushd examples/basic
          yarn
          popd

      - name: Test
        run: |
          yarn test-ios

  deploy-docs:
    name: Deploy website
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '15.x'

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Release to GitHub Pages
        run: |
          git config --global user.name "${GIT_USER}"
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          echo "machine github.com login ${GIT_USER} password ${{ secrets.GH_TOKEN }}" > ~/.netrc
          pushd website
          yarn
          yarn deploy
          popd
        env:
          GIT_USER: "${{ secrets.GH_NAME }}"

      - name: Archive yarn.lock
        uses: actions/upload-artifact@v2
        with:
          name: yarn.lock
          path: yarn.lock
